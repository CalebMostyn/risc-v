--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=32 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 23.1 cbx_cycloneii 2023:11:29:19:36:39:SC cbx_lpm_add_sub 2023:11:29:19:36:39:SC cbx_lpm_compare 2023:11:29:19:36:39:SC cbx_lpm_decode 2023:11:29:19:36:39:SC cbx_mgl 2023:11:29:19:36:47:SC cbx_nadder 2023:11:29:19:36:39:SC cbx_stratix 2023:11:29:19:36:39:SC cbx_stratixii 2023:11:29:19:36:39:SC  VERSION_END


-- Copyright (C) 2023  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 36 
SUBDESIGN decode_sma
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[31..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[31..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode8365w[2..0]	: WIRE;
	w_anode8378w[3..0]	: WIRE;
	w_anode8395w[3..0]	: WIRE;
	w_anode8405w[3..0]	: WIRE;
	w_anode8415w[3..0]	: WIRE;
	w_anode8425w[3..0]	: WIRE;
	w_anode8435w[3..0]	: WIRE;
	w_anode8445w[3..0]	: WIRE;
	w_anode8455w[3..0]	: WIRE;
	w_anode8467w[2..0]	: WIRE;
	w_anode8476w[3..0]	: WIRE;
	w_anode8487w[3..0]	: WIRE;
	w_anode8497w[3..0]	: WIRE;
	w_anode8507w[3..0]	: WIRE;
	w_anode8517w[3..0]	: WIRE;
	w_anode8527w[3..0]	: WIRE;
	w_anode8537w[3..0]	: WIRE;
	w_anode8547w[3..0]	: WIRE;
	w_anode8558w[2..0]	: WIRE;
	w_anode8567w[3..0]	: WIRE;
	w_anode8578w[3..0]	: WIRE;
	w_anode8588w[3..0]	: WIRE;
	w_anode8598w[3..0]	: WIRE;
	w_anode8608w[3..0]	: WIRE;
	w_anode8618w[3..0]	: WIRE;
	w_anode8628w[3..0]	: WIRE;
	w_anode8638w[3..0]	: WIRE;
	w_anode8649w[2..0]	: WIRE;
	w_anode8658w[3..0]	: WIRE;
	w_anode8669w[3..0]	: WIRE;
	w_anode8679w[3..0]	: WIRE;
	w_anode8689w[3..0]	: WIRE;
	w_anode8699w[3..0]	: WIRE;
	w_anode8709w[3..0]	: WIRE;
	w_anode8719w[3..0]	: WIRE;
	w_anode8729w[3..0]	: WIRE;
	w_data8363w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[31..0] = eq_wire[31..0];
	eq_wire[] = ( ( w_anode8729w[3..3], w_anode8719w[3..3], w_anode8709w[3..3], w_anode8699w[3..3], w_anode8689w[3..3], w_anode8679w[3..3], w_anode8669w[3..3], w_anode8658w[3..3]), ( w_anode8638w[3..3], w_anode8628w[3..3], w_anode8618w[3..3], w_anode8608w[3..3], w_anode8598w[3..3], w_anode8588w[3..3], w_anode8578w[3..3], w_anode8567w[3..3]), ( w_anode8547w[3..3], w_anode8537w[3..3], w_anode8527w[3..3], w_anode8517w[3..3], w_anode8507w[3..3], w_anode8497w[3..3], w_anode8487w[3..3], w_anode8476w[3..3]), ( w_anode8455w[3..3], w_anode8445w[3..3], w_anode8435w[3..3], w_anode8425w[3..3], w_anode8415w[3..3], w_anode8405w[3..3], w_anode8395w[3..3], w_anode8378w[3..3]));
	w_anode8365w[] = ( (w_anode8365w[1..1] & (! data_wire[4..4])), (w_anode8365w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode8378w[] = ( (w_anode8378w[2..2] & (! w_data8363w[2..2])), (w_anode8378w[1..1] & (! w_data8363w[1..1])), (w_anode8378w[0..0] & (! w_data8363w[0..0])), w_anode8365w[2..2]);
	w_anode8395w[] = ( (w_anode8395w[2..2] & (! w_data8363w[2..2])), (w_anode8395w[1..1] & (! w_data8363w[1..1])), (w_anode8395w[0..0] & w_data8363w[0..0]), w_anode8365w[2..2]);
	w_anode8405w[] = ( (w_anode8405w[2..2] & (! w_data8363w[2..2])), (w_anode8405w[1..1] & w_data8363w[1..1]), (w_anode8405w[0..0] & (! w_data8363w[0..0])), w_anode8365w[2..2]);
	w_anode8415w[] = ( (w_anode8415w[2..2] & (! w_data8363w[2..2])), (w_anode8415w[1..1] & w_data8363w[1..1]), (w_anode8415w[0..0] & w_data8363w[0..0]), w_anode8365w[2..2]);
	w_anode8425w[] = ( (w_anode8425w[2..2] & w_data8363w[2..2]), (w_anode8425w[1..1] & (! w_data8363w[1..1])), (w_anode8425w[0..0] & (! w_data8363w[0..0])), w_anode8365w[2..2]);
	w_anode8435w[] = ( (w_anode8435w[2..2] & w_data8363w[2..2]), (w_anode8435w[1..1] & (! w_data8363w[1..1])), (w_anode8435w[0..0] & w_data8363w[0..0]), w_anode8365w[2..2]);
	w_anode8445w[] = ( (w_anode8445w[2..2] & w_data8363w[2..2]), (w_anode8445w[1..1] & w_data8363w[1..1]), (w_anode8445w[0..0] & (! w_data8363w[0..0])), w_anode8365w[2..2]);
	w_anode8455w[] = ( (w_anode8455w[2..2] & w_data8363w[2..2]), (w_anode8455w[1..1] & w_data8363w[1..1]), (w_anode8455w[0..0] & w_data8363w[0..0]), w_anode8365w[2..2]);
	w_anode8467w[] = ( (w_anode8467w[1..1] & (! data_wire[4..4])), (w_anode8467w[0..0] & data_wire[3..3]), enable_wire);
	w_anode8476w[] = ( (w_anode8476w[2..2] & (! w_data8363w[2..2])), (w_anode8476w[1..1] & (! w_data8363w[1..1])), (w_anode8476w[0..0] & (! w_data8363w[0..0])), w_anode8467w[2..2]);
	w_anode8487w[] = ( (w_anode8487w[2..2] & (! w_data8363w[2..2])), (w_anode8487w[1..1] & (! w_data8363w[1..1])), (w_anode8487w[0..0] & w_data8363w[0..0]), w_anode8467w[2..2]);
	w_anode8497w[] = ( (w_anode8497w[2..2] & (! w_data8363w[2..2])), (w_anode8497w[1..1] & w_data8363w[1..1]), (w_anode8497w[0..0] & (! w_data8363w[0..0])), w_anode8467w[2..2]);
	w_anode8507w[] = ( (w_anode8507w[2..2] & (! w_data8363w[2..2])), (w_anode8507w[1..1] & w_data8363w[1..1]), (w_anode8507w[0..0] & w_data8363w[0..0]), w_anode8467w[2..2]);
	w_anode8517w[] = ( (w_anode8517w[2..2] & w_data8363w[2..2]), (w_anode8517w[1..1] & (! w_data8363w[1..1])), (w_anode8517w[0..0] & (! w_data8363w[0..0])), w_anode8467w[2..2]);
	w_anode8527w[] = ( (w_anode8527w[2..2] & w_data8363w[2..2]), (w_anode8527w[1..1] & (! w_data8363w[1..1])), (w_anode8527w[0..0] & w_data8363w[0..0]), w_anode8467w[2..2]);
	w_anode8537w[] = ( (w_anode8537w[2..2] & w_data8363w[2..2]), (w_anode8537w[1..1] & w_data8363w[1..1]), (w_anode8537w[0..0] & (! w_data8363w[0..0])), w_anode8467w[2..2]);
	w_anode8547w[] = ( (w_anode8547w[2..2] & w_data8363w[2..2]), (w_anode8547w[1..1] & w_data8363w[1..1]), (w_anode8547w[0..0] & w_data8363w[0..0]), w_anode8467w[2..2]);
	w_anode8558w[] = ( (w_anode8558w[1..1] & data_wire[4..4]), (w_anode8558w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode8567w[] = ( (w_anode8567w[2..2] & (! w_data8363w[2..2])), (w_anode8567w[1..1] & (! w_data8363w[1..1])), (w_anode8567w[0..0] & (! w_data8363w[0..0])), w_anode8558w[2..2]);
	w_anode8578w[] = ( (w_anode8578w[2..2] & (! w_data8363w[2..2])), (w_anode8578w[1..1] & (! w_data8363w[1..1])), (w_anode8578w[0..0] & w_data8363w[0..0]), w_anode8558w[2..2]);
	w_anode8588w[] = ( (w_anode8588w[2..2] & (! w_data8363w[2..2])), (w_anode8588w[1..1] & w_data8363w[1..1]), (w_anode8588w[0..0] & (! w_data8363w[0..0])), w_anode8558w[2..2]);
	w_anode8598w[] = ( (w_anode8598w[2..2] & (! w_data8363w[2..2])), (w_anode8598w[1..1] & w_data8363w[1..1]), (w_anode8598w[0..0] & w_data8363w[0..0]), w_anode8558w[2..2]);
	w_anode8608w[] = ( (w_anode8608w[2..2] & w_data8363w[2..2]), (w_anode8608w[1..1] & (! w_data8363w[1..1])), (w_anode8608w[0..0] & (! w_data8363w[0..0])), w_anode8558w[2..2]);
	w_anode8618w[] = ( (w_anode8618w[2..2] & w_data8363w[2..2]), (w_anode8618w[1..1] & (! w_data8363w[1..1])), (w_anode8618w[0..0] & w_data8363w[0..0]), w_anode8558w[2..2]);
	w_anode8628w[] = ( (w_anode8628w[2..2] & w_data8363w[2..2]), (w_anode8628w[1..1] & w_data8363w[1..1]), (w_anode8628w[0..0] & (! w_data8363w[0..0])), w_anode8558w[2..2]);
	w_anode8638w[] = ( (w_anode8638w[2..2] & w_data8363w[2..2]), (w_anode8638w[1..1] & w_data8363w[1..1]), (w_anode8638w[0..0] & w_data8363w[0..0]), w_anode8558w[2..2]);
	w_anode8649w[] = ( (w_anode8649w[1..1] & data_wire[4..4]), (w_anode8649w[0..0] & data_wire[3..3]), enable_wire);
	w_anode8658w[] = ( (w_anode8658w[2..2] & (! w_data8363w[2..2])), (w_anode8658w[1..1] & (! w_data8363w[1..1])), (w_anode8658w[0..0] & (! w_data8363w[0..0])), w_anode8649w[2..2]);
	w_anode8669w[] = ( (w_anode8669w[2..2] & (! w_data8363w[2..2])), (w_anode8669w[1..1] & (! w_data8363w[1..1])), (w_anode8669w[0..0] & w_data8363w[0..0]), w_anode8649w[2..2]);
	w_anode8679w[] = ( (w_anode8679w[2..2] & (! w_data8363w[2..2])), (w_anode8679w[1..1] & w_data8363w[1..1]), (w_anode8679w[0..0] & (! w_data8363w[0..0])), w_anode8649w[2..2]);
	w_anode8689w[] = ( (w_anode8689w[2..2] & (! w_data8363w[2..2])), (w_anode8689w[1..1] & w_data8363w[1..1]), (w_anode8689w[0..0] & w_data8363w[0..0]), w_anode8649w[2..2]);
	w_anode8699w[] = ( (w_anode8699w[2..2] & w_data8363w[2..2]), (w_anode8699w[1..1] & (! w_data8363w[1..1])), (w_anode8699w[0..0] & (! w_data8363w[0..0])), w_anode8649w[2..2]);
	w_anode8709w[] = ( (w_anode8709w[2..2] & w_data8363w[2..2]), (w_anode8709w[1..1] & (! w_data8363w[1..1])), (w_anode8709w[0..0] & w_data8363w[0..0]), w_anode8649w[2..2]);
	w_anode8719w[] = ( (w_anode8719w[2..2] & w_data8363w[2..2]), (w_anode8719w[1..1] & w_data8363w[1..1]), (w_anode8719w[0..0] & (! w_data8363w[0..0])), w_anode8649w[2..2]);
	w_anode8729w[] = ( (w_anode8729w[2..2] & w_data8363w[2..2]), (w_anode8729w[1..1] & w_data8363w[1..1]), (w_anode8729w[0..0] & w_data8363w[0..0]), w_anode8649w[2..2]);
	w_data8363w[2..0] = data_wire[2..0];
END;
--VALID FILE
